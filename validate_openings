#!/bin/bash

# VALIDATE_OPENINGS - Chess Opening FEN File Validation Script
#
# This script validates .fen files by checking if they can be loaded
# and played correctly by the chess program.
#
# Usage: ./validate_openings [filename.fen]
#        ./validate_openings              # validates all .fen files
#
# Exit codes:
#   0 - All files valid
#   1 - One or more files invalid
#   2 - Usage error

validate_single_fen() {
    local file="$1"
    local basename=$(basename "$file" .fen)

    echo "Validating $file..."

    if [[ ! -f "$file" ]]; then
        echo "  ERROR: File not found"
        return 1
    fi

    if [[ ! -s "$file" ]]; then
        echo "  ERROR: File is empty"
        return 1
    fi

    # Count positions in file
    local position_count=$(wc -l < "$file")
    echo "  Found $position_count positions"

    # Try to load each position and verify it's valid
    local line_num=1
    local errors=0

    while IFS= read -r fen_line; do
        if [[ -z "$fen_line" ]]; then
            continue
        fi

        # Create a temporary test program
        cat > "test_fen_position.c" << EOF
#include "chess.h"
#include "stockfish.h"
#include <stdio.h>

int main() {
    ChessGame game;
    init_board(&game);

    if (setup_board_from_fen(&game, "$fen_line")) {
        printf("VALID\n");
        return 0;
    } else {
        printf("INVALID\n");
        return 1;
    }
}
EOF

        # Compile and test
        if gcc -Wall -Wextra -std=c99 -g test_fen_position.c chess.o stockfish.o -o test_fen_position 2>/dev/null; then
            if ! ./test_fen_position >/dev/null 2>&1; then
                echo "  ERROR: Invalid FEN at line $line_num: $fen_line"
                errors=$((errors + 1))
            fi
        else
            echo "  ERROR: Could not compile test for line $line_num"
            errors=$((errors + 1))
        fi

        line_num=$((line_num + 1))
    done < "$file"

    # Clean up
    rm -f test_fen_position.c test_fen_position

    if [[ $errors -eq 0 ]]; then
        echo "  SUCCESS: All $position_count positions are valid"
        return 0
    else
        echo "  FAILED: $errors invalid positions found"
        return 1
    fi
}

main() {
    local exit_code=0

    if [[ $# -eq 1 ]]; then
        # Validate single file
        if ! validate_single_fen "$1"; then
            exit_code=1
        fi
    elif [[ $# -eq 0 ]]; then
        # Validate all .fen files
        local fen_files=(FEN_FILES/*.fen)

        if [[ ${#fen_files[@]} -eq 0 ]] || [[ ! -f "${fen_files[0]}" ]]; then
            echo "No .fen files found in FEN_FILES directory"
            return 1
        fi

        echo "Validating ${#fen_files[@]} FEN files..."
        echo

        for file in "${fen_files[@]}"; do
            if ! validate_single_fen "$file"; then
                exit_code=1
            fi
            echo
        done

        if [[ $exit_code -eq 0 ]]; then
            echo "All FEN files are valid!"
        else
            echo "Some FEN files have errors - see output above"
        fi
    else
        echo "Usage: $0 [filename.fen]"
        echo "       $0                    # validate all FEN files"
        return 2
    fi

    return $exit_code
}

main "$@"